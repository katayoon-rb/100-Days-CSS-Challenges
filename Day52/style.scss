$numberOfRings: 10; // update together with HTML
$numberOfDots: 12; // update together with HTML
$radius: 40;

.frame {
	position: absolute;
	top: 50%;
	left: 50%;
	width: 400px;
	height: 400px;
	margin-top: -200px;
	margin-left: -200px;
	border-radius: 2px;
	box-shadow: 1px 2px 10px 0px rgba(0,0,0,0.3);
	overflow: hidden;
	background: #EDDDD4;
	color: #fff;
}

.ring {
	position: absolute;
	width: ($radius * 2) + px;
	height: ($radius * 2) + px;
	top: ( (400 - ($radius * 2) ) / 2 ) + px;
	left: ( (400 - ($radius * 2) ) / 2 ) + px;

	.dot {
		position: absolute;
		width: 8px;
		height: 8px;
		top: ($radius) + px;
		left: ($radius) + px;

		.fill {
			width: 8px;
			height: 8px;
			background: #772E25;
			border-radius: 50px;
		}
	}
}

@for $i from 1 through $numberOfRings {
	$nullBase: $i - 1;	
	$dotsPerCircle: ($numberOfDots + ( $i * 6 ) );
	.ring-#{$i} {

		.fill {
			animation: pulsate 2s ease-in-out ($i/3)+s alternate infinite both;	
		}

		@for $j from 1 through $dotsPerCircle {
			$nullBaseJ: $j - 1;
			$angle: 360 / $dotsPerCircle;
			.dot-#{$j} {
				$deg: ($nullBaseJ * $angle) + deg;
				transform: translate3d(0, ( ($radius + ($nullBase * 11)) * -1) + px, 0) rotate($deg);
				transform-origin: 0 ($radius + ($nullBase * 11)) + px;
			}
		}
	} 
}

@keyframes pulsate {
	0% {
		transform: scale(0);
	}
	100% {
		transform: scale(1);
	}
}

